orbs:
  aws-cli: circleci/aws-cli@1.0.0 #See: https://circleci.com/orbs/registry/orb/circleci/aws-cli

version: 2.1
jobs:
  build_push:
    docker: # run the steps with Docker
      - image: cimg/go:1.13 # ...with this image as the primary container
      # this is where all `steps` will run
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Prep env
          command: |
            mkdir -p /home/circleci/go/src
            go get
      - run:
          name: build image
          command: |
            sudo apt install wget -y
            export GOPATH=$HOME/go
            export GOARCH=amd64
            wget https://golang.org/dl/go1.15.5.linux-amd64.tar.gz
            tar -xzvf go1.15.5.linux-amd64.tar.gz
            go/bin/go build ./cmd/geth
      # - run:
      #     name: build image
      #     command: |
      #       export GOPATH=$HOME/go
      #       make geth-linux-amd64
      - aws-cli/setup: #See: https://circleci.com/orbs/registry/orb/circleci/aws-cli
          aws-access-key-id: ACCESS_KEY_ID
          aws-secret-access-key: SECRET_ACCESS_KEY
          aws-region: AWS_REGION
      - run:
          name: push to s3
          command: aws s3 cp ./geth s3://ethercattle-binaries/$CIRCLE_TAG/geth-linux-amd64 --acl=public-read
      - run:
          name: Message Slack
          command: |
              ./slack-post.sh -w $SlackWebhook -m "*go-ethereum*:\nTag: $CIRCLE_TAG \n $(jq -r '.builds[0].artifact_id' ./manifest.json)"


workflows:
  version: 2
  build:
    jobs:
      - build_push:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
